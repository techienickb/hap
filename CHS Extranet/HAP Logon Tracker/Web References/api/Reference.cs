//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace HAP.Logon.Tracker.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="apiSoap", Namespace="http://hap.codeplex.com/")]
    public partial class api : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoteLogoffOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public api() {
            this.Url = global::HAP.Logon.Tracker.Properties.Settings.Default.HAP_Logon_Tracker_api_api;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ClearCompletedEventHandler ClearCompleted;
        
        /// <remarks/>
        public event LogonCompletedEventHandler LogonCompleted;
        
        /// <remarks/>
        public event RemoteLogoffCompletedEventHandler RemoteLogoffCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hap.codeplex.com/Clear", RequestNamespace="http://hap.codeplex.com/", ResponseNamespace="http://hap.codeplex.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Clear(string Computer, string DomainName) {
            this.Invoke("Clear", new object[] {
                        Computer,
                        DomainName});
        }
        
        /// <remarks/>
        public void ClearAsync(string Computer, string DomainName) {
            this.ClearAsync(Computer, DomainName, null);
        }
        
        /// <remarks/>
        public void ClearAsync(string Computer, string DomainName, object userState) {
            if ((this.ClearOperationCompleted == null)) {
                this.ClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearOperationCompleted);
            }
            this.InvokeAsync("Clear", new object[] {
                        Computer,
                        DomainName}, this.ClearOperationCompleted, userState);
        }
        
        private void OnClearOperationCompleted(object arg) {
            if ((this.ClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hap.codeplex.com/Logon", RequestNamespace="http://hap.codeplex.com/", ResponseNamespace="http://hap.codeplex.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LogonsList Logon(string Username, string Computer, string DomainName, string IP, string LogonServer, string os) {
            object[] results = this.Invoke("Logon", new object[] {
                        Username,
                        Computer,
                        DomainName,
                        IP,
                        LogonServer,
                        os});
            return ((LogonsList)(results[0]));
        }
        
        /// <remarks/>
        public void LogonAsync(string Username, string Computer, string DomainName, string IP, string LogonServer, string os) {
            this.LogonAsync(Username, Computer, DomainName, IP, LogonServer, os, null);
        }
        
        /// <remarks/>
        public void LogonAsync(string Username, string Computer, string DomainName, string IP, string LogonServer, string os, object userState) {
            if ((this.LogonOperationCompleted == null)) {
                this.LogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogonOperationCompleted);
            }
            this.InvokeAsync("Logon", new object[] {
                        Username,
                        Computer,
                        DomainName,
                        IP,
                        LogonServer,
                        os}, this.LogonOperationCompleted, userState);
        }
        
        private void OnLogonOperationCompleted(object arg) {
            if ((this.LogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogonCompleted(this, new LogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hap.codeplex.com/RemoteLogoff", RequestNamespace="http://hap.codeplex.com/", ResponseNamespace="http://hap.codeplex.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoteLogoff(string Computer, string DomainName) {
            this.Invoke("RemoteLogoff", new object[] {
                        Computer,
                        DomainName});
        }
        
        /// <remarks/>
        public void RemoteLogoffAsync(string Computer, string DomainName) {
            this.RemoteLogoffAsync(Computer, DomainName, null);
        }
        
        /// <remarks/>
        public void RemoteLogoffAsync(string Computer, string DomainName, object userState) {
            if ((this.RemoteLogoffOperationCompleted == null)) {
                this.RemoteLogoffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoteLogoffOperationCompleted);
            }
            this.InvokeAsync("RemoteLogoff", new object[] {
                        Computer,
                        DomainName}, this.RemoteLogoffOperationCompleted, userState);
        }
        
        private void OnRemoteLogoffOperationCompleted(object arg) {
            if ((this.RemoteLogoffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoteLogoffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class LogonsList {
        
        private UT userTypeField;
        
        private int maxLogonsField;
        
        private string overrideCodeField;
        
        private trackerlogentrysmall[] logonsField;
        
        /// <remarks/>
        public UT UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxLogons {
            get {
                return this.maxLogonsField;
            }
            set {
                this.maxLogonsField = value;
            }
        }
        
        /// <remarks/>
        public string OverrideCode {
            get {
                return this.overrideCodeField;
            }
            set {
                this.overrideCodeField = value;
            }
        }
        
        /// <remarks/>
        public trackerlogentrysmall[] Logons {
            get {
                return this.logonsField;
            }
            set {
                this.logonsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hap.codeplex.com/")]
    public enum UT {
        
        /// <remarks/>
        Admin,
        
        /// <remarks/>
        Staff,
        
        /// <remarks/>
        Student,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class trackerlogentrysmall {
        
        private string computerNameField;
        
        private string userNameField;
        
        private string domainNameField;
        
        private System.DateTime logOnDateTimeField;
        
        /// <remarks/>
        public string ComputerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LogOnDateTime {
            get {
                return this.logOnDateTimeField;
            }
            set {
                this.logOnDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogonCompletedEventHandler(object sender, LogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogonsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogonsList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoteLogoffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591