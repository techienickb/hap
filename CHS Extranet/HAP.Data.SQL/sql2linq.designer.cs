#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HAP.Data.SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hap")]
	public partial class sql2linqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
	#region Extensibility Method Definitions
	partial void OnCreated();
	partial void InsertTrackerEvent(TrackerEvent instance);
	partial void UpdateTrackerEvent(TrackerEvent instance);
	partial void DeleteTrackerEvent(TrackerEvent instance);
	#endregion
		
		public sql2linqDataContext() : 
				base("", mappingSource)
		{
			OnCreated();
		}
		
		public sql2linqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sql2linqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sql2linqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sql2linqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TrackerEvent> TrackerEvents
		{
			get
			{
				return this.GetTable<TrackerEvent>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrackerEvents")]
	public partial class TrackerEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _LogonDateTime;
		
		private string _Username;
		
		private string _ComputerName;
		
		private System.Nullable<System.DateTime> _LogoffDateTime;
		
		private string _domainname;
		
		private string _ip;
		
		private string _logonserver;
		
		private string _os;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnLogonDateTimeChanging(System.DateTime value);
	partial void OnLogonDateTimeChanged();
	partial void OnUsernameChanging(string value);
	partial void OnUsernameChanged();
	partial void OnComputerNameChanging(string value);
	partial void OnComputerNameChanged();
	partial void OnLogoffDateTimeChanging(System.Nullable<System.DateTime> value);
	partial void OnLogoffDateTimeChanged();
	partial void OndomainnameChanging(string value);
	partial void OndomainnameChanged();
	partial void OnipChanging(string value);
	partial void OnipChanged();
	partial void OnlogonserverChanging(string value);
	partial void OnlogonserverChanged();
	partial void OnosChanging(string value);
	partial void OnosChanged();
	#endregion
		
		public TrackerEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogonDateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime LogonDateTime
		{
			get
			{
				return this._LogonDateTime;
			}
			set
			{
				if ((this._LogonDateTime != value))
				{
					this.OnLogonDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LogonDateTime = value;
					this.SendPropertyChanged("LogonDateTime");
					this.OnLogonDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoffDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogoffDateTime
		{
			get
			{
				return this._LogoffDateTime;
			}
			set
			{
				if ((this._LogoffDateTime != value))
				{
					this.OnLogoffDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LogoffDateTime = value;
					this.SendPropertyChanged("LogoffDateTime");
					this.OnLogoffDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domainname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string domainname
		{
			get
			{
				return this._domainname;
			}
			set
			{
				if ((this._domainname != value))
				{
					this.OndomainnameChanging(value);
					this.SendPropertyChanging();
					this._domainname = value;
					this.SendPropertyChanged("domainname");
					this.OndomainnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logonserver", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string logonserver
		{
			get
			{
				return this._logonserver;
			}
			set
			{
				if ((this._logonserver != value))
				{
					this.OnlogonserverChanging(value);
					this.SendPropertyChanging();
					this._logonserver = value;
					this.SendPropertyChanged("logonserver");
					this.OnlogonserverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_os", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string os
		{
			get
			{
				return this._os;
			}
			set
			{
				if ((this._os != value))
				{
					this.OnosChanging(value);
					this.SendPropertyChanging();
					this._os = value;
					this.SendPropertyChanged("os");
					this.OnosChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
