//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace HAP.Silverlight.Browser.service {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileCheckResponse", Namespace="http://hap.codeplex.com/")]
    public partial class FileCheckResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HAP.Silverlight.Browser.service.FileCheckResponseCode CodeField;
        
        private string FileNameField;
        
        private string ExtensionField;
        
        private string ThumbField;
        
        private string FileSizeField;
        
        private System.Nullable<System.DateTime> DateModifiedField;
        
        private System.Nullable<System.DateTime> DateCreatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public HAP.Silverlight.Browser.service.FileCheckResponseCode Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Thumb {
            get {
                return this.ThumbField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbField, value) != true)) {
                    this.ThumbField = value;
                    this.RaisePropertyChanged("Thumb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileSizeField, value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<System.DateTime> DateModified {
            get {
                return this.DateModifiedField;
            }
            set {
                if ((this.DateModifiedField.Equals(value) != true)) {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileCheckResponseCode", Namespace="http://hap.codeplex.com/")]
    public enum FileCheckResponseCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exists = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deny = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrimaryResponse", Namespace="http://hap.codeplex.com/")]
    public partial class PrimaryResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem> ItemsField;
        
        private System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.UploadFilter> FiltersField;
        
        private string HAPNameField;
        
        private string HAPVerionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.UploadFilter> Filters {
            get {
                return this.FiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltersField, value) != true)) {
                    this.FiltersField = value;
                    this.RaisePropertyChanged("Filters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string HAPName {
            get {
                return this.HAPNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HAPNameField, value) != true)) {
                    this.HAPNameField = value;
                    this.RaisePropertyChanged("HAPName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string HAPVerion {
            get {
                return this.HAPVerionField;
            }
            set {
                if ((object.ReferenceEquals(this.HAPVerionField, value) != true)) {
                    this.HAPVerionField = value;
                    this.RaisePropertyChanged("HAPVerion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComputerBrowserAPIItem", Namespace="http://hap.codeplex.com/")]
    public partial class ComputerBrowserAPIItem : HAP.Silverlight.Browser.service.CBFile {
        
        private string DownloadField;
        
        private HAP.Silverlight.Browser.service.AccessControlActions AccessControlField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Download {
            get {
                return this.DownloadField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadField, value) != true)) {
                    this.DownloadField = value;
                    this.RaisePropertyChanged("Download");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public HAP.Silverlight.Browser.service.AccessControlActions AccessControl {
            get {
                return this.AccessControlField;
            }
            set {
                if ((this.AccessControlField.Equals(value) != true)) {
                    this.AccessControlField = value;
                    this.RaisePropertyChanged("AccessControl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadFilter", Namespace="http://hap.codeplex.com/")]
    public partial class UploadFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string FilterField;
        
        private string EnableForField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string EnableFor {
            get {
                return this.EnableForField;
            }
            set {
                if ((object.ReferenceEquals(this.EnableForField, value) != true)) {
                    this.EnableForField = value;
                    this.RaisePropertyChanged("EnableFor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CBFile", Namespace="http://hap.codeplex.com/")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HAP.Silverlight.Browser.service.ComputerBrowserAPIItem))]
    public partial class CBFile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string ExtensionField;
        
        private System.DateTime CreatedTimeField;
        
        private System.DateTime ModifiedTimeField;
        
        private string IconField;
        
        private string SizeField;
        
        private string TypeField;
        
        private string PathField;
        
        private HAP.Silverlight.Browser.service.BType BTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime ModifiedTime {
            get {
                return this.ModifiedTimeField;
            }
            set {
                if ((this.ModifiedTimeField.Equals(value) != true)) {
                    this.ModifiedTimeField = value;
                    this.RaisePropertyChanged("ModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public HAP.Silverlight.Browser.service.BType BType {
            get {
                return this.BTypeField;
            }
            set {
                if ((this.BTypeField.Equals(value) != true)) {
                    this.BTypeField = value;
                    this.RaisePropertyChanged("BType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BType", Namespace="http://hap.codeplex.com/")]
    public enum BType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Root = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Drive = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessControlActions", Namespace="http://hap.codeplex.com/")]
    public enum AccessControlActions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Change = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        View = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://hap.codeplex.com/", ItemName="string")]
    public class ArrayOfString : System.Collections.ObjectModel.ObservableCollection<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://hap.codeplex.com/", ConfigurationName="service.apiSoap")]
    public interface apiSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/CheckFile", ReplyAction="*")]
        System.IAsyncResult BeginCheckFile(HAP.Silverlight.Browser.service.CheckFileRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.CheckFileResponse EndCheckFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/ListDrives", ReplyAction="*")]
        System.IAsyncResult BeginListDrives(HAP.Silverlight.Browser.service.ListDrivesRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.ListDrivesResponse EndListDrives(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/List", ReplyAction="*")]
        System.IAsyncResult BeginList(HAP.Silverlight.Browser.service.ListRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.ListResponse EndList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/Save", ReplyAction="*")]
        System.IAsyncResult BeginSave(HAP.Silverlight.Browser.service.SaveRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.SaveResponse EndSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/Delete", ReplyAction="*")]
        System.IAsyncResult BeginDelete(HAP.Silverlight.Browser.service.DeleteRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.DeleteResponse EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/NewFolder", ReplyAction="*")]
        System.IAsyncResult BeginNewFolder(HAP.Silverlight.Browser.service.NewFolderRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.NewFolderResponse EndNewFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/ZIP", ReplyAction="*")]
        System.IAsyncResult BeginZIP(HAP.Silverlight.Browser.service.ZIPRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.ZIPResponse EndZIP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/Unzip", ReplyAction="*")]
        System.IAsyncResult BeginUnzip(HAP.Silverlight.Browser.service.UnzipRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.UnzipResponse EndUnzip(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hap.codeplex.com/UploadFile", ReplyAction="*")]
        System.IAsyncResult BeginUploadFile(HAP.Silverlight.Browser.service.UploadFileRequest request, System.AsyncCallback callback, object asyncState);
        
        HAP.Silverlight.Browser.service.UploadFileResponse EndUploadFile(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckFile", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.CheckFileRequestBody Body;
        
        public CheckFileRequest() {
        }
        
        public CheckFileRequest(HAP.Silverlight.Browser.service.CheckFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class CheckFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string FileName;
        
        public CheckFileRequestBody() {
        }
        
        public CheckFileRequestBody(string FileName) {
            this.FileName = FileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckFileResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.CheckFileResponseBody Body;
        
        public CheckFileResponse() {
        }
        
        public CheckFileResponse(HAP.Silverlight.Browser.service.CheckFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class CheckFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public HAP.Silverlight.Browser.service.FileCheckResponse CheckFileResult;
        
        public CheckFileResponseBody() {
        }
        
        public CheckFileResponseBody(HAP.Silverlight.Browser.service.FileCheckResponse CheckFileResult) {
            this.CheckFileResult = CheckFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListDrivesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListDrives", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.ListDrivesRequestBody Body;
        
        public ListDrivesRequest() {
        }
        
        public ListDrivesRequest(HAP.Silverlight.Browser.service.ListDrivesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ListDrivesRequestBody {
        
        public ListDrivesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListDrivesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListDrivesResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.ListDrivesResponseBody Body;
        
        public ListDrivesResponse() {
        }
        
        public ListDrivesResponse(HAP.Silverlight.Browser.service.ListDrivesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class ListDrivesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public HAP.Silverlight.Browser.service.PrimaryResponse ListDrivesResult;
        
        public ListDrivesResponseBody() {
        }
        
        public ListDrivesResponseBody(HAP.Silverlight.Browser.service.PrimaryResponse ListDrivesResult) {
            this.ListDrivesResult = ListDrivesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="List", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.ListRequestBody Body;
        
        public ListRequest() {
        }
        
        public ListRequest(HAP.Silverlight.Browser.service.ListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class ListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string path;
        
        public ListRequestBody() {
        }
        
        public ListRequestBody(string path) {
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.ListResponseBody Body;
        
        public ListResponse() {
        }
        
        public ListResponse(HAP.Silverlight.Browser.service.ListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class ListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem> ListResult;
        
        public ListResponseBody() {
        }
        
        public ListResponseBody(System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem> ListResult) {
            this.ListResult = ListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Save", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.SaveRequestBody Body;
        
        public SaveRequest() {
        }
        
        public SaveRequest(HAP.Silverlight.Browser.service.SaveRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class SaveRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public HAP.Silverlight.Browser.service.CBFile Current;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string newpath;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool overwrite;
        
        public SaveRequestBody() {
        }
        
        public SaveRequestBody(HAP.Silverlight.Browser.service.CBFile Current, string newpath, bool overwrite) {
            this.Current = Current;
            this.newpath = newpath;
            this.overwrite = overwrite;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.SaveResponseBody Body;
        
        public SaveResponse() {
        }
        
        public SaveResponse(HAP.Silverlight.Browser.service.SaveResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class SaveResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.CBFile> SaveResult;
        
        public SaveResponseBody() {
        }
        
        public SaveResponseBody(System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.CBFile> SaveResult) {
            this.SaveResult = SaveResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Delete", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.DeleteRequestBody Body;
        
        public DeleteRequest() {
        }
        
        public DeleteRequest(HAP.Silverlight.Browser.service.DeleteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class DeleteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string path;
        
        public DeleteRequestBody() {
        }
        
        public DeleteRequestBody(string path) {
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.DeleteResponseBody Body;
        
        public DeleteResponse() {
        }
        
        public DeleteResponse(HAP.Silverlight.Browser.service.DeleteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DeleteResponseBody {
        
        public DeleteResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NewFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NewFolder", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.NewFolderRequestBody Body;
        
        public NewFolderRequest() {
        }
        
        public NewFolderRequest(HAP.Silverlight.Browser.service.NewFolderRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class NewFolderRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string basepath;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string foldername;
        
        public NewFolderRequestBody() {
        }
        
        public NewFolderRequestBody(string basepath, string foldername) {
            this.basepath = basepath;
            this.foldername = foldername;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NewFolderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NewFolderResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.NewFolderResponseBody Body;
        
        public NewFolderResponse() {
        }
        
        public NewFolderResponse(HAP.Silverlight.Browser.service.NewFolderResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class NewFolderResponseBody {
        
        public NewFolderResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ZIPRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ZIP", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.ZIPRequestBody Body;
        
        public ZIPRequest() {
        }
        
        public ZIPRequest(HAP.Silverlight.Browser.service.ZIPRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class ZIPRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string basepath;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string filename;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public HAP.Silverlight.Browser.service.ArrayOfString filepaths;
        
        public ZIPRequestBody() {
        }
        
        public ZIPRequestBody(string basepath, string filename, HAP.Silverlight.Browser.service.ArrayOfString filepaths) {
            this.basepath = basepath;
            this.filename = filename;
            this.filepaths = filepaths;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ZIPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ZIPResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.ZIPResponseBody Body;
        
        public ZIPResponse() {
        }
        
        public ZIPResponse(HAP.Silverlight.Browser.service.ZIPResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ZIPResponseBody {
        
        public ZIPResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnzipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Unzip", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.UnzipRequestBody Body;
        
        public UnzipRequest() {
        }
        
        public UnzipRequest(HAP.Silverlight.Browser.service.UnzipRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class UnzipRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string zipfile;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string extractfolder;
        
        public UnzipRequestBody() {
        }
        
        public UnzipRequestBody(string zipfile, string extractfolder) {
            this.zipfile = zipfile;
            this.extractfolder = extractfolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnzipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnzipResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.UnzipResponseBody Body;
        
        public UnzipResponse() {
        }
        
        public UnzipResponse(HAP.Silverlight.Browser.service.UnzipResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UnzipResponseBody {
        
        public UnzipResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadFile", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.UploadFileRequestBody Body;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(HAP.Silverlight.Browser.service.UploadFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hap.codeplex.com/")]
    public partial class UploadFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string FileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long StartByte;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] Data;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool Complete;
        
        public UploadFileRequestBody() {
        }
        
        public UploadFileRequestBody(string FileName, long StartByte, byte[] Data, bool Complete) {
            this.FileName = FileName;
            this.StartByte = StartByte;
            this.Data = Data;
            this.Complete = Complete;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadFileResponse", Namespace="http://hap.codeplex.com/", Order=0)]
        public HAP.Silverlight.Browser.service.UploadFileResponseBody Body;
        
        public UploadFileResponse() {
        }
        
        public UploadFileResponse(HAP.Silverlight.Browser.service.UploadFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UploadFileResponseBody {
        
        public UploadFileResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface apiSoapChannel : HAP.Silverlight.Browser.service.apiSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HAP.Silverlight.Browser.service.FileCheckResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HAP.Silverlight.Browser.service.FileCheckResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListDrivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListDrivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HAP.Silverlight.Browser.service.PrimaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HAP.Silverlight.Browser.service.PrimaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.CBFile> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.CBFile>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class apiSoapClient : System.ServiceModel.ClientBase<HAP.Silverlight.Browser.service.apiSoap>, HAP.Silverlight.Browser.service.apiSoap {
        
        private BeginOperationDelegate onBeginCheckFileDelegate;
        
        private EndOperationDelegate onEndCheckFileDelegate;
        
        private System.Threading.SendOrPostCallback onCheckFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginListDrivesDelegate;
        
        private EndOperationDelegate onEndListDrivesDelegate;
        
        private System.Threading.SendOrPostCallback onListDrivesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListDelegate;
        
        private EndOperationDelegate onEndListDelegate;
        
        private System.Threading.SendOrPostCallback onListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDelegate;
        
        private EndOperationDelegate onEndSaveDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewFolderDelegate;
        
        private EndOperationDelegate onEndNewFolderDelegate;
        
        private System.Threading.SendOrPostCallback onNewFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginZIPDelegate;
        
        private EndOperationDelegate onEndZIPDelegate;
        
        private System.Threading.SendOrPostCallback onZIPCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnzipDelegate;
        
        private EndOperationDelegate onEndUnzipDelegate;
        
        private System.Threading.SendOrPostCallback onUnzipCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public apiSoapClient() {
        }
        
        public apiSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public apiSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CheckFileCompletedEventArgs> CheckFileCompleted;
        
        public event System.EventHandler<ListDrivesCompletedEventArgs> ListDrivesCompleted;
        
        public event System.EventHandler<ListCompletedEventArgs> ListCompleted;
        
        public event System.EventHandler<SaveCompletedEventArgs> SaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NewFolderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ZIPCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnzipCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginCheckFile(HAP.Silverlight.Browser.service.CheckFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCheckFile(string FileName, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.CheckFileRequest inValue = new HAP.Silverlight.Browser.service.CheckFileRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.CheckFileRequestBody();
            inValue.Body.FileName = FileName;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginCheckFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.CheckFileResponse HAP.Silverlight.Browser.service.apiSoap.EndCheckFile(System.IAsyncResult result) {
            return base.Channel.EndCheckFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private HAP.Silverlight.Browser.service.FileCheckResponse EndCheckFile(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.CheckFileResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndCheckFile(result);
            return retVal.Body.CheckFileResult;
        }
        
        private System.IAsyncResult OnBeginCheckFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileName = ((string)(inValues[0]));
            return this.BeginCheckFile(FileName, callback, asyncState);
        }
        
        private object[] OnEndCheckFile(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.FileCheckResponse retVal = this.EndCheckFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckFileCompleted(object state) {
            if ((this.CheckFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckFileCompleted(this, new CheckFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckFileAsync(string FileName) {
            this.CheckFileAsync(FileName, null);
        }
        
        public void CheckFileAsync(string FileName, object userState) {
            if ((this.onBeginCheckFileDelegate == null)) {
                this.onBeginCheckFileDelegate = new BeginOperationDelegate(this.OnBeginCheckFile);
            }
            if ((this.onEndCheckFileDelegate == null)) {
                this.onEndCheckFileDelegate = new EndOperationDelegate(this.OnEndCheckFile);
            }
            if ((this.onCheckFileCompletedDelegate == null)) {
                this.onCheckFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckFileCompleted);
            }
            base.InvokeAsync(this.onBeginCheckFileDelegate, new object[] {
                        FileName}, this.onEndCheckFileDelegate, this.onCheckFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginListDrives(HAP.Silverlight.Browser.service.ListDrivesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListDrives(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginListDrives(System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.ListDrivesRequest inValue = new HAP.Silverlight.Browser.service.ListDrivesRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.ListDrivesRequestBody();
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginListDrives(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.ListDrivesResponse HAP.Silverlight.Browser.service.apiSoap.EndListDrives(System.IAsyncResult result) {
            return base.Channel.EndListDrives(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private HAP.Silverlight.Browser.service.PrimaryResponse EndListDrives(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.ListDrivesResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndListDrives(result);
            return retVal.Body.ListDrivesResult;
        }
        
        private System.IAsyncResult OnBeginListDrives(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginListDrives(callback, asyncState);
        }
        
        private object[] OnEndListDrives(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.PrimaryResponse retVal = this.EndListDrives(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListDrivesCompleted(object state) {
            if ((this.ListDrivesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListDrivesCompleted(this, new ListDrivesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListDrivesAsync() {
            this.ListDrivesAsync(null);
        }
        
        public void ListDrivesAsync(object userState) {
            if ((this.onBeginListDrivesDelegate == null)) {
                this.onBeginListDrivesDelegate = new BeginOperationDelegate(this.OnBeginListDrives);
            }
            if ((this.onEndListDrivesDelegate == null)) {
                this.onEndListDrivesDelegate = new EndOperationDelegate(this.OnEndListDrives);
            }
            if ((this.onListDrivesCompletedDelegate == null)) {
                this.onListDrivesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListDrivesCompleted);
            }
            base.InvokeAsync(this.onBeginListDrivesDelegate, null, this.onEndListDrivesDelegate, this.onListDrivesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginList(HAP.Silverlight.Browser.service.ListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginList(string path, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.ListRequest inValue = new HAP.Silverlight.Browser.service.ListRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.ListRequestBody();
            inValue.Body.path = path;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.ListResponse HAP.Silverlight.Browser.service.apiSoap.EndList(System.IAsyncResult result) {
            return base.Channel.EndList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem> EndList(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.ListResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndList(result);
            return retVal.Body.ListResult;
        }
        
        private System.IAsyncResult OnBeginList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            return this.BeginList(path, callback, asyncState);
        }
        
        private object[] OnEndList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.ComputerBrowserAPIItem> retVal = this.EndList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListCompleted(object state) {
            if ((this.ListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListCompleted(this, new ListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListAsync(string path) {
            this.ListAsync(path, null);
        }
        
        public void ListAsync(string path, object userState) {
            if ((this.onBeginListDelegate == null)) {
                this.onBeginListDelegate = new BeginOperationDelegate(this.OnBeginList);
            }
            if ((this.onEndListDelegate == null)) {
                this.onEndListDelegate = new EndOperationDelegate(this.OnEndList);
            }
            if ((this.onListCompletedDelegate == null)) {
                this.onListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListCompleted);
            }
            base.InvokeAsync(this.onBeginListDelegate, new object[] {
                        path}, this.onEndListDelegate, this.onListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginSave(HAP.Silverlight.Browser.service.SaveRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSave(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSave(HAP.Silverlight.Browser.service.CBFile Current, string newpath, bool overwrite, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.SaveRequest inValue = new HAP.Silverlight.Browser.service.SaveRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.SaveRequestBody();
            inValue.Body.Current = Current;
            inValue.Body.newpath = newpath;
            inValue.Body.overwrite = overwrite;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginSave(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.SaveResponse HAP.Silverlight.Browser.service.apiSoap.EndSave(System.IAsyncResult result) {
            return base.Channel.EndSave(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.CBFile> EndSave(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.SaveResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndSave(result);
            return retVal.Body.SaveResult;
        }
        
        private System.IAsyncResult OnBeginSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.CBFile Current = ((HAP.Silverlight.Browser.service.CBFile)(inValues[0]));
            string newpath = ((string)(inValues[1]));
            bool overwrite = ((bool)(inValues[2]));
            return this.BeginSave(Current, newpath, overwrite, callback, asyncState);
        }
        
        private object[] OnEndSave(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HAP.Silverlight.Browser.service.CBFile> retVal = this.EndSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCompleted(object state) {
            if ((this.SaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCompleted(this, new SaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAsync(HAP.Silverlight.Browser.service.CBFile Current, string newpath, bool overwrite) {
            this.SaveAsync(Current, newpath, overwrite, null);
        }
        
        public void SaveAsync(HAP.Silverlight.Browser.service.CBFile Current, string newpath, bool overwrite, object userState) {
            if ((this.onBeginSaveDelegate == null)) {
                this.onBeginSaveDelegate = new BeginOperationDelegate(this.OnBeginSave);
            }
            if ((this.onEndSaveDelegate == null)) {
                this.onEndSaveDelegate = new EndOperationDelegate(this.OnEndSave);
            }
            if ((this.onSaveCompletedDelegate == null)) {
                this.onSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDelegate, new object[] {
                        Current,
                        newpath,
                        overwrite}, this.onEndSaveDelegate, this.onSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginDelete(HAP.Silverlight.Browser.service.DeleteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDelete(string path, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.DeleteRequest inValue = new HAP.Silverlight.Browser.service.DeleteRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.DeleteRequestBody();
            inValue.Body.path = path;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginDelete(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.DeleteResponse HAP.Silverlight.Browser.service.apiSoap.EndDelete(System.IAsyncResult result) {
            return base.Channel.EndDelete(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndDelete(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.DeleteResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            return this.BeginDelete(path, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            this.EndDelete(result);
            return null;
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(string path) {
            this.DeleteAsync(path, null);
        }
        
        public void DeleteAsync(string path, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        path}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginNewFolder(HAP.Silverlight.Browser.service.NewFolderRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewFolder(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginNewFolder(string basepath, string foldername, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.NewFolderRequest inValue = new HAP.Silverlight.Browser.service.NewFolderRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.NewFolderRequestBody();
            inValue.Body.basepath = basepath;
            inValue.Body.foldername = foldername;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginNewFolder(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.NewFolderResponse HAP.Silverlight.Browser.service.apiSoap.EndNewFolder(System.IAsyncResult result) {
            return base.Channel.EndNewFolder(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndNewFolder(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.NewFolderResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndNewFolder(result);
        }
        
        private System.IAsyncResult OnBeginNewFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string basepath = ((string)(inValues[0]));
            string foldername = ((string)(inValues[1]));
            return this.BeginNewFolder(basepath, foldername, callback, asyncState);
        }
        
        private object[] OnEndNewFolder(System.IAsyncResult result) {
            this.EndNewFolder(result);
            return null;
        }
        
        private void OnNewFolderCompleted(object state) {
            if ((this.NewFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewFolderAsync(string basepath, string foldername) {
            this.NewFolderAsync(basepath, foldername, null);
        }
        
        public void NewFolderAsync(string basepath, string foldername, object userState) {
            if ((this.onBeginNewFolderDelegate == null)) {
                this.onBeginNewFolderDelegate = new BeginOperationDelegate(this.OnBeginNewFolder);
            }
            if ((this.onEndNewFolderDelegate == null)) {
                this.onEndNewFolderDelegate = new EndOperationDelegate(this.OnEndNewFolder);
            }
            if ((this.onNewFolderCompletedDelegate == null)) {
                this.onNewFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewFolderCompleted);
            }
            base.InvokeAsync(this.onBeginNewFolderDelegate, new object[] {
                        basepath,
                        foldername}, this.onEndNewFolderDelegate, this.onNewFolderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginZIP(HAP.Silverlight.Browser.service.ZIPRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginZIP(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginZIP(string basepath, string filename, HAP.Silverlight.Browser.service.ArrayOfString filepaths, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.ZIPRequest inValue = new HAP.Silverlight.Browser.service.ZIPRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.ZIPRequestBody();
            inValue.Body.basepath = basepath;
            inValue.Body.filename = filename;
            inValue.Body.filepaths = filepaths;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginZIP(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.ZIPResponse HAP.Silverlight.Browser.service.apiSoap.EndZIP(System.IAsyncResult result) {
            return base.Channel.EndZIP(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndZIP(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.ZIPResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndZIP(result);
        }
        
        private System.IAsyncResult OnBeginZIP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string basepath = ((string)(inValues[0]));
            string filename = ((string)(inValues[1]));
            HAP.Silverlight.Browser.service.ArrayOfString filepaths = ((HAP.Silverlight.Browser.service.ArrayOfString)(inValues[2]));
            return this.BeginZIP(basepath, filename, filepaths, callback, asyncState);
        }
        
        private object[] OnEndZIP(System.IAsyncResult result) {
            this.EndZIP(result);
            return null;
        }
        
        private void OnZIPCompleted(object state) {
            if ((this.ZIPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ZIPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ZIPAsync(string basepath, string filename, HAP.Silverlight.Browser.service.ArrayOfString filepaths) {
            this.ZIPAsync(basepath, filename, filepaths, null);
        }
        
        public void ZIPAsync(string basepath, string filename, HAP.Silverlight.Browser.service.ArrayOfString filepaths, object userState) {
            if ((this.onBeginZIPDelegate == null)) {
                this.onBeginZIPDelegate = new BeginOperationDelegate(this.OnBeginZIP);
            }
            if ((this.onEndZIPDelegate == null)) {
                this.onEndZIPDelegate = new EndOperationDelegate(this.OnEndZIP);
            }
            if ((this.onZIPCompletedDelegate == null)) {
                this.onZIPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnZIPCompleted);
            }
            base.InvokeAsync(this.onBeginZIPDelegate, new object[] {
                        basepath,
                        filename,
                        filepaths}, this.onEndZIPDelegate, this.onZIPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginUnzip(HAP.Silverlight.Browser.service.UnzipRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnzip(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUnzip(string zipfile, string extractfolder, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.UnzipRequest inValue = new HAP.Silverlight.Browser.service.UnzipRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.UnzipRequestBody();
            inValue.Body.zipfile = zipfile;
            inValue.Body.extractfolder = extractfolder;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginUnzip(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.UnzipResponse HAP.Silverlight.Browser.service.apiSoap.EndUnzip(System.IAsyncResult result) {
            return base.Channel.EndUnzip(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUnzip(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.UnzipResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndUnzip(result);
        }
        
        private System.IAsyncResult OnBeginUnzip(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zipfile = ((string)(inValues[0]));
            string extractfolder = ((string)(inValues[1]));
            return this.BeginUnzip(zipfile, extractfolder, callback, asyncState);
        }
        
        private object[] OnEndUnzip(System.IAsyncResult result) {
            this.EndUnzip(result);
            return null;
        }
        
        private void OnUnzipCompleted(object state) {
            if ((this.UnzipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnzipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnzipAsync(string zipfile, string extractfolder) {
            this.UnzipAsync(zipfile, extractfolder, null);
        }
        
        public void UnzipAsync(string zipfile, string extractfolder, object userState) {
            if ((this.onBeginUnzipDelegate == null)) {
                this.onBeginUnzipDelegate = new BeginOperationDelegate(this.OnBeginUnzip);
            }
            if ((this.onEndUnzipDelegate == null)) {
                this.onEndUnzipDelegate = new EndOperationDelegate(this.OnEndUnzip);
            }
            if ((this.onUnzipCompletedDelegate == null)) {
                this.onUnzipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnzipCompleted);
            }
            base.InvokeAsync(this.onBeginUnzipDelegate, new object[] {
                        zipfile,
                        extractfolder}, this.onEndUnzipDelegate, this.onUnzipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HAP.Silverlight.Browser.service.apiSoap.BeginUploadFile(HAP.Silverlight.Browser.service.UploadFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadFile(string FileName, long StartByte, byte[] Data, bool Complete, System.AsyncCallback callback, object asyncState) {
            HAP.Silverlight.Browser.service.UploadFileRequest inValue = new HAP.Silverlight.Browser.service.UploadFileRequest();
            inValue.Body = new HAP.Silverlight.Browser.service.UploadFileRequestBody();
            inValue.Body.FileName = FileName;
            inValue.Body.StartByte = StartByte;
            inValue.Body.Data = Data;
            inValue.Body.Complete = Complete;
            return ((HAP.Silverlight.Browser.service.apiSoap)(this)).BeginUploadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HAP.Silverlight.Browser.service.UploadFileResponse HAP.Silverlight.Browser.service.apiSoap.EndUploadFile(System.IAsyncResult result) {
            return base.Channel.EndUploadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUploadFile(System.IAsyncResult result) {
            HAP.Silverlight.Browser.service.UploadFileResponse retVal = ((HAP.Silverlight.Browser.service.apiSoap)(this)).EndUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileName = ((string)(inValues[0]));
            long StartByte = ((long)(inValues[1]));
            byte[] Data = ((byte[])(inValues[2]));
            bool Complete = ((bool)(inValues[3]));
            return this.BeginUploadFile(FileName, StartByte, Data, Complete, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            this.EndUploadFile(result);
            return null;
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(string FileName, long StartByte, byte[] Data, bool Complete) {
            this.UploadFileAsync(FileName, StartByte, Data, Complete, null);
        }
        
        public void UploadFileAsync(string FileName, long StartByte, byte[] Data, bool Complete, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        FileName,
                        StartByte,
                        Data,
                        Complete}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override HAP.Silverlight.Browser.service.apiSoap CreateChannel() {
            return new apiSoapClientChannel(this);
        }
        
        private class apiSoapClientChannel : ChannelBase<HAP.Silverlight.Browser.service.apiSoap>, HAP.Silverlight.Browser.service.apiSoap {
            
            public apiSoapClientChannel(System.ServiceModel.ClientBase<HAP.Silverlight.Browser.service.apiSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCheckFile(HAP.Silverlight.Browser.service.CheckFileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CheckFile", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.CheckFileResponse EndCheckFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.CheckFileResponse _result = ((HAP.Silverlight.Browser.service.CheckFileResponse)(base.EndInvoke("CheckFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListDrives(HAP.Silverlight.Browser.service.ListDrivesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ListDrives", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.ListDrivesResponse EndListDrives(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.ListDrivesResponse _result = ((HAP.Silverlight.Browser.service.ListDrivesResponse)(base.EndInvoke("ListDrives", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginList(HAP.Silverlight.Browser.service.ListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("List", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.ListResponse EndList(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.ListResponse _result = ((HAP.Silverlight.Browser.service.ListResponse)(base.EndInvoke("List", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSave(HAP.Silverlight.Browser.service.SaveRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Save", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.SaveResponse EndSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.SaveResponse _result = ((HAP.Silverlight.Browser.service.SaveResponse)(base.EndInvoke("Save", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete(HAP.Silverlight.Browser.service.DeleteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Delete", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.DeleteResponse EndDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.DeleteResponse _result = ((HAP.Silverlight.Browser.service.DeleteResponse)(base.EndInvoke("Delete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewFolder(HAP.Silverlight.Browser.service.NewFolderRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("NewFolder", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.NewFolderResponse EndNewFolder(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.NewFolderResponse _result = ((HAP.Silverlight.Browser.service.NewFolderResponse)(base.EndInvoke("NewFolder", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginZIP(HAP.Silverlight.Browser.service.ZIPRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ZIP", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.ZIPResponse EndZIP(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.ZIPResponse _result = ((HAP.Silverlight.Browser.service.ZIPResponse)(base.EndInvoke("ZIP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnzip(HAP.Silverlight.Browser.service.UnzipRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Unzip", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.UnzipResponse EndUnzip(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.UnzipResponse _result = ((HAP.Silverlight.Browser.service.UnzipResponse)(base.EndInvoke("Unzip", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile(HAP.Silverlight.Browser.service.UploadFileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public HAP.Silverlight.Browser.service.UploadFileResponse EndUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                HAP.Silverlight.Browser.service.UploadFileResponse _result = ((HAP.Silverlight.Browser.service.UploadFileResponse)(base.EndInvoke("UploadFile", _args, result)));
                return _result;
            }
        }
    }
}
